/* You can add global styles to this file, and also import other style files */
// This file was generated by running 'ng generate @angular/material:theme-color'.
// Proceed with caution if making changes to this file.

// @use rules must be written before any other rules
@use 'sass:map';
@use '@angular/material' as mat;
@use './scss/variables' as vars;

// Note: Color palettes are generated from primary: #3366ff (rgb(51, 102, 255)), secondary: #5d5d5d
$_palettes: (
	primary: (
		0: #000000,
		10: #001a4d,
		20: #002e80,
		25: #003699,
		30: #003eb3,
		35: #0046cc,
		40: #004ee6,
		50: #3366ff,
		60: #5c7fff,
		70: #7f99ff,
		80: #a3b3ff,
		90: #c7ccff,
		95: #e6e6ff,
		98: #f5f5ff,
		99: #fafaff,
		100: #ffffff,
	),
	secondary: (
		0: #000000,
		10: #1b1c1c,
		20: #303030,
		25: #3b3b3b,
		30: #464747,
		35: #525252,
		40: #5e5e5e,
		50: #777777,
		60: #919090,
		70: #acabab,
		80: #c7c6c6,
		90: #e4e2e2,
		95: #f2f0f0,
		98: #fbf9f8,
		99: #fefcfb,
		100: #ffffff,
	),
	tertiary: (
		0: #000000,
		10: #2e1065,
		20: #452580,
		25: #523099,
		30: #5f3bb3,
		35: #6d46cc,
		40: #7b51e6,
		50: #9966ff,
		60: #b380ff,
		70: #cc99ff,
		80: #e6b3ff,
		90: #f0ccff,
		95: #f8e6ff,
		98: #fcf5ff,
		99: #fefaff,
		100: #ffffff,
	),
	neutral: (
		0: #000000,
		10: #1a1c1e,
		20: #2f3133,
		25: #3a3c3e,
		30: #464749,
		35: #525254,
		40: #5e5e60,
		50: #777779,
		60: #919092,
		70: #acabac,
		80: #c7c6c7,
		90: #e3e2e3,
		95: #f1f0f1,
		98: #faf9fa,
		99: #fdfcfd,
		100: #ffffff,
		4: #0f1113,
		6: #141618,
		12: #1f2123,
		17: #292b2d,
		22: #343638,
		24: #383a3c,
		87: #dadada,
		92: #e8e7e8,
		94: #eeeded,
		96: #f3f2f3,
	),
	neutral-variant: (
		0: #000000,
		10: #161b20,
		20: #2b3035,
		25: #363b40,
		30: #42464b,
		35: #4e5256,
		40: #5a5e62,
		50: #73777b,
		60: #8d9094,
		70: #a7aaae,
		80: #c3c6ca,
		90: #dfe2e6,
		95: #edf0f4,
		98: #f6f9fc,
		99: #fafcff,
		100: #ffffff,
	),
	error: (
		0: #000000,
		10: #410002,
		20: #690005,
		25: #7e0007,
		30: #93000a,
		35: #a80710,
		40: #ba1a1a,
		50: #de3730,
		60: #ff5449,
		70: #ff897d,
		80: #ffb4ab,
		90: #ffdad6,
		95: #ffedea,
		98: #fff8f7,
		99: #fffbff,
		100: #ffffff,
	),
);

$_rest: (
	secondary: map.get($_palettes, secondary),
	neutral: map.get($_palettes, neutral),
	neutral-variant: map.get($_palettes, neutral-variant),
	error: map.get($_palettes, error),
);

$primary-palette: map.merge(map.get($_palettes, primary), $_rest);
$tertiary-palette: map.merge(map.get($_palettes, tertiary), $_rest);

@function _high-contrast-value($light, $dark, $theme-type) {
	@if ($theme-type == light) {
		@return $light;
	}
	@if ($theme-type == dark) {
		@return $dark;
	}
	// Para color-scheme, retornamos o valor light por padr√£o
	@if ($theme-type == color-scheme) {
		@return $light;
	}

	@error 'Unknown theme-type #{$theme-type}. Expected light, dark, or color-scheme';
}

@mixin high-contrast-overrides($theme-type) {
	@include mat.theme-overrides(
		(
			primary: _high-contrast-value(#001a4d, #3366ff, $theme-type),
			on-primary: _high-contrast-value(#ffffff, #000000, $theme-type),
			primary-container: _high-contrast-value(#002e80, #5c7fff, $theme-type),
			on-primary-container: _high-contrast-value(#ffffff, #000a1a, $theme-type),
			inverse-primary: _high-contrast-value(#3366ff, #002e80, $theme-type),
			primary-fixed: _high-contrast-value(#002e80, #c7ccff, $theme-type),
			primary-fixed-dim: _high-contrast-value(#001a4d, #3366ff, $theme-type),
			on-primary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
			on-primary-fixed-variant: _high-contrast-value(#ffffff, #000d26, $theme-type),
			secondary: _high-contrast-value(#2c2c2c, #f1efef, $theme-type),
			on-secondary: _high-contrast-value(#ffffff, #000000, $theme-type),
			secondary-container: _high-contrast-value(#494949, #c3c2c2, $theme-type),
			on-secondary-container: _high-contrast-value(#ffffff, #0a0b0c, $theme-type),
			secondary-fixed: _high-contrast-value(#494949, #e4e2e2, $theme-type),
			secondary-fixed-dim: _high-contrast-value(#323333, #c7c6c6, $theme-type),
			on-secondary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
			on-secondary-fixed-variant: _high-contrast-value(#ffffff, #101111, $theme-type),
			tertiary: _high-contrast-value(#452580, #f8e6ff, $theme-type),
			on-tertiary: _high-contrast-value(#ffffff, #000000, $theme-type),
			tertiary-container: _high-contrast-value(#6d46cc, #cc99ff, $theme-type),
			on-tertiary-container: _high-contrast-value(#ffffff, #1a0033, $theme-type),
			tertiary-fixed: _high-contrast-value(#6d46cc, #f0ccff, $theme-type),
			tertiary-fixed-dim: _high-contrast-value(#523099, #e6b3ff, $theme-type),
			on-tertiary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
			on-tertiary-fixed-variant: _high-contrast-value(#ffffff, #2e1065, $theme-type),
			background: _high-contrast-value(#fafcff, #0f1113, $theme-type),
			on-background: _high-contrast-value(#1a1c1e, #e3e2e3, $theme-type),
			surface: _high-contrast-value(#fafcff, #0f1113, $theme-type),
			surface-dim: _high-contrast-value(#dadcde, #0f1113, $theme-type),
			surface-bright: _high-contrast-value(#fafcff, #353739, $theme-type),
			surface-container-lowest: _high-contrast-value(#ffffff, #0a0c0e, $theme-type),
			surface-container: _high-contrast-value(#eef0f3, #1f2123, $theme-type),
			surface-container-high: _high-contrast-value(#e8eaed, #292b2d, $theme-type),
			surface-container-highest: _high-contrast-value(#e3e4e7, #343638, $theme-type),
			on-surface: _high-contrast-value(#000000, #ffffff, $theme-type),
			shadow: _high-contrast-value(#000000, #000000, $theme-type),
			scrim: _high-contrast-value(#000000, #000000, $theme-type),
			surface-tint: _high-contrast-value(#004ee6, #3366ff, $theme-type),
			inverse-surface: _high-contrast-value(#2f3133, #e3e2e3, $theme-type),
			inverse-on-surface: _high-contrast-value(#f1f0f1, #1a1c1e, $theme-type),
			outline: _high-contrast-value(#73777b, #8d9094, $theme-type),
			outline-variant: _high-contrast-value(#c3c6ca, #42464b, $theme-type),
			error: _high-contrast-value(#600004, #ffece9, $theme-type),
			on-error: _high-contrast-value(#ffffff, #000000, $theme-type),
			error-container: _high-contrast-value(#98000a, #ffaea4, $theme-type),
			on-error-container: _high-contrast-value(#ffffff, #220001, $theme-type),
			surface-variant: _high-contrast-value(#dfe2e6, #42464b, $theme-type),
			on-surface-variant: _high-contrast-value(#000000, #ffffff, $theme-type),
		)
	);
}

// Incluir os core styles do Material
@include mat.core();

// Criar o tema usando as paletas customizadas
$light-theme: mat.define-theme(
	(
		color: (
			theme-type: light,
			primary: $primary-palette,
			tertiary: $tertiary-palette,
		),
		typography: (
			brand-family: 'Roboto',
			plain-family: 'Roboto',
		),
		density: (
			scale: 0,
		),
	)
);

// Aplicar o tema - M3 themes must be wrapped in a selector
html {
	@include mat.all-component-themes($light-theme);
}

html,
body {
	height: 100%;
}
body {
	margin: 0;
	font-family: Roboto, 'Helvetica Neue', sans-serif;
}
